// This file is auto-generated by @hey-api/openapi-ts

export type BodyLoginForAccessTokenApiV1UserAuthLoginPost = {
  grant_type?: string | null;
  username: string;
  password: string;
  scope?: string;
  client_id?: string | null;
  client_secret?: string | null;
};

export type HttpValidationError = {
  detail?: Array<ValidationError>;
};

export type UserCreateOrUpdateInputReadable = {
  email: string;
  username: string;
};

export type UserCreateOrUpdateInputWritable = {
  email: string;
  password: string;
  username: string;
};

export type UserDataOutput = {
  id: number;
  email: string;
  username: string;
};

export type UserTokenData = {
  access_token: string;
  token_type: string;
};

export type ValidationError = {
  loc: Array<string | number>;
  msg: string;
  type: string;
};

export type GetSelfApiV1UserMeGetData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/api/v1/user/me";
};

export type GetSelfApiV1UserMeGetResponses = {
  /**
   * Successful Response
   */
  200: UserDataOutput;
};

export type GetSelfApiV1UserMeGetResponse =
  GetSelfApiV1UserMeGetResponses[keyof GetSelfApiV1UserMeGetResponses];

export type RegisterUserApiV1UserAuthRegisterPostData = {
  body: UserCreateOrUpdateInputWritable;
  path?: never;
  query?: never;
  url: "/api/v1/user/auth/register";
};

export type RegisterUserApiV1UserAuthRegisterPostErrors = {
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type RegisterUserApiV1UserAuthRegisterPostError =
  RegisterUserApiV1UserAuthRegisterPostErrors[keyof RegisterUserApiV1UserAuthRegisterPostErrors];

export type RegisterUserApiV1UserAuthRegisterPostResponses = {
  /**
   * Successful Response
   */
  201: UserDataOutput;
};

export type RegisterUserApiV1UserAuthRegisterPostResponse =
  RegisterUserApiV1UserAuthRegisterPostResponses[keyof RegisterUserApiV1UserAuthRegisterPostResponses];

export type LoginForAccessTokenApiV1UserAuthLoginPostData = {
  body: BodyLoginForAccessTokenApiV1UserAuthLoginPost;
  path?: never;
  query?: never;
  url: "/api/v1/user/auth/login";
};

export type LoginForAccessTokenApiV1UserAuthLoginPostErrors = {
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type LoginForAccessTokenApiV1UserAuthLoginPostError =
  LoginForAccessTokenApiV1UserAuthLoginPostErrors[keyof LoginForAccessTokenApiV1UserAuthLoginPostErrors];

export type LoginForAccessTokenApiV1UserAuthLoginPostResponses = {
  /**
   * Successful Response
   */
  200: UserTokenData;
};

export type LoginForAccessTokenApiV1UserAuthLoginPostResponse =
  LoginForAccessTokenApiV1UserAuthLoginPostResponses[keyof LoginForAccessTokenApiV1UserAuthLoginPostResponses];

export type ClientOptions = {
  baseURL: `${string}://${string}/api` | string;
};
